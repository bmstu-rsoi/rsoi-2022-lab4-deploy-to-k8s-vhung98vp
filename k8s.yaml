apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: postgres
      name: postgres
    spec:
      ports:
        - name: "5432"
          port: 5432
          targetPort: 5432
      selector:
        app: postgres
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gateway
      name: gateway
    spec:
      ports:
        - name: "80"
          port: 80
          targetPort: 8080
      selector:
        app: gateway
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: reservation
      name: reservation
    spec:
      ports:
        - name: "8070"
          port: 8070
          targetPort: 8070
      selector:
        app: reservation
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: library
      name: library
    spec:
      ports:
        - name: "8060"
          port: 8060
          targetPort: 8060
      selector:
        app: library
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: rating
      name: rating
    spec:
      ports:
        - name: "8050"
          port: 8050
          targetPort: 8050
      selector:
        app: rating
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: postgres
      name: postgres
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: postgres
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: postgres
        spec:
          containers:
            - env:
                - name: POSTGRES_USER
                  value: postgres
                - name: POSTGRES_PASSWORD
                  value: postgres
                - name: POSTGRES_DB
                  value: postgres
              image: library/postgres:13
              name: postgres
              ports:
                - containerPort: 5432
              resources: {}
          restartPolicy: Always
    status: {} 
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: gateway
      name: gateway
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: gateway
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: gateway
        spec:
          containers:
            - env:
                - name: RATING_URL
                  value: "http://rating:8050"
                - name: LIBRARY_URL
                  value: "http://library:8060"
                - name: RESERVATION_URL
                  value: "http://reservation:8070"
              image: vhung98vp/gateway
              name: gateway
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: reservation
      name: reservation
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: reservation
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: reservation
        spec:
          containers:
            - env:
                - name: DATABASE_URL
                  value: "postgres://postgres:postgres@postgres:5432/reservations"
                - name: GATEWAY_URL
                  value: "http://gateway"
              image: vhung98vp/reservation
              name: reservation
              ports:
                - containerPort: 8070
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: library
      name: library
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: library
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: library
        spec:
          containers:
            - env:
                - name: DATABASE_URL
                  value: "postgres://postgres:postgres@postgres:5432/libraries"
              image: vhung98vp/library
              name: library
              ports:
                - containerPort: 8060
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: rating
      name: rating
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: rating
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: rating
        spec:
          containers:
            - env:
                - name: DATABASE_URL
                  value: "postgres://postgres:postgres@postgres:5432/ratings"
              image: vhung98vp/rating
              name: rating
              ports:
                - containerPort: 8050
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}
